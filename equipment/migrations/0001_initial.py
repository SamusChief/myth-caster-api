# Generated by Django 3.1.1 on 2020-09-13 23:36

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import equipment.models.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WeaponProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WondrousItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('weight', models.FloatField(db_index=True, default=0)),
                ('cost', models.IntegerField(db_index=True, default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('slot', models.CharField(blank=True, max_length=255, null=True)),
                ('authorized_editors', models.ManyToManyField(related_name='_wondrousitem_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, equipment.models.mixins.MagicItemMixin),
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('weight', models.FloatField(db_index=True, default=0)),
                ('cost', models.IntegerField(db_index=True, default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('damage_dice', models.CharField(db_index=True, max_length=255)),
                ('damage_type', models.CharField(db_index=True, max_length=255)),
                ('category', models.CharField(choices=[('S', 'Simple Weapon'), ('M', 'Martial Weapon'), ('O', 'Other')], db_index=True, max_length=1)),
                ('authorized_editors', models.ManyToManyField(related_name='_weapon_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('properties', models.ManyToManyField(related_name='weapons', to='equipment.WeaponProperty')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, equipment.models.mixins.MagicItemMixin),
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('weight', models.FloatField(db_index=True, default=0)),
                ('cost', models.IntegerField(db_index=True, default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('authorized_editors', models.ManyToManyField(related_name='_tool_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Armor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('weight', models.FloatField(db_index=True, default=0)),
                ('cost', models.IntegerField(db_index=True, default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('category', models.CharField(choices=[('L', 'Light Armor'), ('M', 'Medium Armor'), ('H', 'Heavy Armor'), ('S', 'Shield')], db_index=True, max_length=1)),
                ('armor_class', models.IntegerField(db_index=True)),
                ('strength_requirement', models.IntegerField(default=1)),
                ('stealth_disadvantage', models.BooleanField(default=False)),
                ('authorized_editors', models.ManyToManyField(related_name='_armor_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, equipment.models.mixins.MagicItemMixin),
        ),
        migrations.CreateModel(
            name='AdventuringGear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('weight', models.FloatField(db_index=True, default=0)),
                ('cost', models.IntegerField(db_index=True, default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('authorized_editors', models.ManyToManyField(related_name='_adventuringgear_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
