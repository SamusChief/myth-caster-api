# Generated by Django 3.1.1 on 2020-09-20 21:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('skills', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('equipment', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CharacterClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('hit_die', models.CharField(choices=[('4', 'd4'), ('6', 'd6'), ('8', 'd8'), ('10', 'd10'), ('12', 'd12'), ('20', 'd20')], max_length=2)),
                ('description', models.TextField()),
                ('skill_number', models.PositiveIntegerField(default=0)),
                ('multiclass_skill_number', models.PositiveIntegerField(default=0)),
                ('equipment_choices', models.TextField()),
                ('major_saving_throw', models.CharField(choices=[('DEX', 'dexterity'), ('CON', 'constitution'), ('WIS', 'wisdom')], max_length=3)),
                ('minor_saving_throw', models.CharField(choices=[('STR', 'strength'), ('INT', 'intelligence'), ('CHA', 'charisma')], max_length=3)),
                ('proficient_light_armor', models.BooleanField(default=False)),
                ('proficient_heavy_armor', models.BooleanField(default=False)),
                ('proficient_shields', models.BooleanField(default=False)),
                ('proficient_martial_weapons', models.BooleanField(default=False)),
                ('proficient_simple_weapons', models.BooleanField(default=False)),
                ('proficient_other', models.TextField(blank=True, null=True)),
                ('authorized_editors', models.ManyToManyField(related_name='_characterclass_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('description', models.TextField()),
                ('prerequisite_strength', models.IntegerField(db_index=True, default=0)),
                ('prerequisite_dexterity', models.IntegerField(db_index=True, default=0)),
                ('prerequisite_constitution', models.IntegerField(db_index=True, default=0)),
                ('prerequisite_intelligence', models.IntegerField(db_index=True, default=0)),
                ('prerequisite_wisdom', models.IntegerField(db_index=True, default=0)),
                ('prerequisite_charisma', models.IntegerField(db_index=True, default=0)),
                ('authorized_editors', models.ManyToManyField(related_name='_feature_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpellSlotsAtLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_level', models.PositiveIntegerField(db_index=True)),
                ('level_1', models.PositiveIntegerField(default=0)),
                ('level_2', models.PositiveIntegerField(default=0)),
                ('level_3', models.PositiveIntegerField(default=0)),
                ('level_4', models.PositiveIntegerField(default=0)),
                ('level_5', models.PositiveIntegerField(default=0)),
                ('level_6', models.PositiveIntegerField(default=0)),
                ('level_7', models.PositiveIntegerField(default=0)),
                ('level_8', models.PositiveIntegerField(default=0)),
                ('level_9', models.PositiveIntegerField(default=0)),
                ('authorized_editors', models.ManyToManyField(related_name='_spellslotsatlevel_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpellsKnownAtLevel',
            fields=[
                ('spellslotsatlevel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='character.spellslotsatlevel')),
                ('level_0', models.PositiveIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
            bases=('character.spellslotsatlevel',),
        ),
        migrations.CreateModel(
            name='SkillProficiency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency_level', models.CharField(choices=[('P', 'Proficient'), ('E', 'Expert')], default='P', max_length=1)),
                ('authorized_editors', models.ManyToManyField(related_name='_skillproficiency_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='skills.skill')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryWondrousItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('authorized_editors', models.ManyToManyField(related_name='_inventorywondrousitem_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('gear', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='equipment.wondrousitem')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryWeapon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('authorized_editors', models.ManyToManyField(related_name='_inventoryweapon_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('gear', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='equipment.weapon')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryTool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('authorized_editors', models.ManyToManyField(related_name='_inventorytool_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('gear', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='equipment.tool')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryArmor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('authorized_editors', models.ManyToManyField(related_name='_inventoryarmor_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('gear', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='equipment.armor')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryAdventuringGear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('authorized_editors', models.ManyToManyField(related_name='_inventoryadventuringgear_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('gear', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='equipment.adventuringgear')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeaturesAtLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_level', models.PositiveIntegerField(db_index=True)),
                ('authorized_editors', models.ManyToManyField(related_name='_featuresatlevel_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('features', models.ManyToManyField(to='character.Feature')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassAndLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField()),
                ('authorized_editors', models.ManyToManyField(related_name='_classandlevel_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('character_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='character.characterclass')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='characterclass',
            name='features',
            field=models.ManyToManyField(related_name='character_class_with_feature', to='character.FeaturesAtLevel'),
        ),
        migrations.AddField(
            model_name='characterclass',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='characterclass',
            name='skill_choices',
            field=models.ManyToManyField(to='skills.Skill'),
        ),
        migrations.AddField(
            model_name='characterclass',
            name='spell_slots',
            field=models.ManyToManyField(related_name='character_class_with_spell_slots', to='character.SpellSlotsAtLevel'),
        ),
        migrations.CreateModel(
            name='Background',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('description', models.TextField()),
                ('granted_languages', models.TextField(blank=True, null=True)),
                ('starting_gold', models.FloatField(default=10)),
                ('starting_equipment', models.TextField()),
                ('authorized_editors', models.ManyToManyField(related_name='_background_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('features', models.ManyToManyField(to='character.Feature')),
                ('granted_armors', models.ManyToManyField(to='equipment.Armor')),
                ('granted_skills', models.ManyToManyField(to='skills.Skill')),
                ('granted_tools', models.ManyToManyField(to='equipment.Tool')),
                ('granted_weapons', models.ManyToManyField(to='equipment.Weapon')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ancestry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('description', models.TextField()),
                ('authorized_editors', models.ManyToManyField(related_name='_ancestry_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('features', models.ManyToManyField(to='character.Feature')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubAncestry',
            fields=[
                ('ancestry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='character.ancestry')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child', to='character.ancestry')),
            ],
            options={
                'abstract': False,
            },
            bases=('character.ancestry',),
        ),
        migrations.AddField(
            model_name='characterclass',
            name='spells_known',
            field=models.ManyToManyField(related_name='character_class_with_spells_known', to='character.SpellsKnownAtLevel'),
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('xp', models.PositiveIntegerField(default=0)),
                ('hit_point_total', models.PositiveIntegerField()),
                ('hit_point_current', models.PositiveIntegerField()),
                ('temporary_hit_point_total', models.PositiveIntegerField()),
                ('strength', models.PositiveIntegerField(default=10)),
                ('dexterity', models.PositiveIntegerField(default=10)),
                ('constitution', models.PositiveIntegerField(default=10)),
                ('intelligence', models.PositiveIntegerField(default=10)),
                ('wisdom', models.PositiveIntegerField(default=10)),
                ('charisma', models.PositiveIntegerField(default=10)),
                ('proficient_light_armor', models.BooleanField(default=False)),
                ('proficient_medium_armor', models.BooleanField(default=False)),
                ('proficient_heavy_armor', models.BooleanField(default=False)),
                ('proficient_shields', models.BooleanField(default=False)),
                ('proficient_simple', models.BooleanField(default=False)),
                ('proficient_martial', models.BooleanField(default=False)),
                ('proficient_tools', models.TextField(blank=True, null=True)),
                ('proficient_languages', models.TextField(blank=True, null=True)),
                ('jack_of_all_trades', models.BooleanField(default=False)),
                ('initiative_bonus', models.PositiveIntegerField(default=0)),
                ('proficient_other', models.TextField(blank=True, null=True)),
                ('ancestry', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='characters_with_ancestry', to='character.ancestry')),
                ('authorized_editors', models.ManyToManyField(related_name='_character_authorized_editors_+', to=settings.AUTH_USER_MODEL)),
                ('background', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='character.background')),
                ('class_levels', models.ManyToManyField(related_name='characters_with_class_and_level', to='character.ClassAndLevel')),
                ('inventory_adventuring_gear', models.ManyToManyField(related_name='characters_with_gear', to='character.InventoryAdventuringGear')),
                ('inventory_armors', models.ManyToManyField(related_name='characters_with_armor', to='character.InventoryArmor')),
                ('inventory_tools', models.ManyToManyField(related_name='characters_with_tool', to='character.InventoryTool')),
                ('inventory_weapons', models.ManyToManyField(related_name='characters_with_weapon', to='character.InventoryWeapon')),
                ('inventory_wondrous_items', models.ManyToManyField(related_name='characters_with_wondrous_item', to='character.InventoryWondrousItem')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('skills', models.ManyToManyField(related_name='characters_with_skill_proficiency', to='character.SkillProficiency')),
                ('subancestry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='characters_with_subancestry', to='character.subancestry')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Archetype',
            fields=[
                ('characterclass_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='character.characterclass')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child', to='character.characterclass')),
            ],
            options={
                'abstract': False,
            },
            bases=('character.characterclass',),
        ),
    ]
